<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        anMJngAAAABJRU5ErkJggg==
</value>
  </data>
</root>